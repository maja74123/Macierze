rows = 3  # liczba wierszy
cols = 4  # liczba kolumn

# Tworzenie pustej macierzy wypełnionej zerami
matrix = [[0 for j in range(cols)] for i in range(rows)]

# Wyświetlanie macierzy
for row in matrix:
    print(row)


def perform_gaussian_elimination(matrix):
    rows = len(matrix)
    cols = len(matrix[0])

    for i in range(rows):
        # Sprawdź, czy element diagonalny jest zerem. Jeśli tak, zamień wiersze z poniżej nim.
        if matrix[i][i] == 0:
            for j in range(i + 1, rows):
                if matrix[j][i] != 0:
                    matrix[i], matrix[j] = matrix[j], matrix[i]
                    break

        # Wykonaj eliminację Gaussa dla każdego wiersza poniżej elementu diagonalnego
        for j in range(i + 1, rows):
            ratio = matrix[j][i] / matrix[i][i]
            for k in range(cols):
                matrix[j][k] -= ratio * matrix[i][k]

    return matrix
result = perform_gaussian_elimination(matrix)
for row in result:
    print(row)

# Wykonaj dodawanie (operacja elementarna Gaussa)
def addition(macierz, row1, row2, ilosc=1):
    for i in range(macierz[0]):
        float(macierz[row1-1][i]) += float(ilosc)*float(macierz[row2-1][i])
    return macierz[row1-1]
    
# Wykonaj mnożenie przez skalar
def scalar(macierz, skalar):
    for i in range(len(macierz)):
        for j in range(len(macierz[0])):
            float(macierz[i][j]) *= float(skalar)
    return macierz
